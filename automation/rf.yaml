
- alias: 'Group office light switches'
  trigger:
    - platform: state
      entity_id: 
        - switch.rfbridge1
        - switch.sonoff_t1
  action:
    - service_template: >
        {% if trigger.to_state.state == "on" %}
        homeassistant.turn_on
        {% elif trigger.to_state.state == "off" %}
        homeassistant.turn_off
        {% endif %}
      entity_id:
        - switch.rfbridge1 
        - switch.sonoff_t1

- alias: 'Group office lamp switches'
  trigger:
    - platform: state
      entity_id:
        - switch.rfbridge8
        - light.office_lamp
  action:
    - service_template: >
        {% if trigger.to_state.state == "on" %}
        homeassistant.turn_on
        {% elif trigger.to_state.state == "off" %}
        homeassistant.turn_off
        {% endif %}
      entity_id:
        - switch.rfbridge8
        - light.office_lamp

- alias: 'Group living room lamp switches'
  trigger:
    - platform: state
      entity_id: 
        - switch.rfbridge4
        - switch.sonoff1
  action:
    - service_template: >
        {% if trigger.to_state.state == "on" %}
        homeassistant.turn_on
        {% elif trigger.to_state.state == "off" %}
        homeassistant.turn_off
        {% endif %}
      entity_id:
        - switch.rfbridge4 
        - switch.sonoff1

- alias: 'Group kids room bed light switches'
  trigger:
    - platform: state
      entity_id:
        - switch.rfbridge3
        - switch.rfbridge6
        - light.kidsroom_bedlight
  action:
    - service_template: >
        {% if trigger.to_state.state == "on" %}
        homeassistant.turn_on
        {% elif trigger.to_state.state == "off" %}
        homeassistant.turn_off
        {% endif %}
      entity_id:
        - switch.rfbridge3
        - switch.rfbridge6
        - light.kidsroom_bedlight

- alias: 'Group kids room light switches'
  trigger:
    - platform: state
      entity_id:
        - switch.rfbridge2
        - switch.rfbridge7
        - switch.sonoff_t2
  action:
    - service_template: >
        {% if trigger.to_state.state == "on" %}
        switch.turn_on
        {% elif trigger.to_state.state == "off" %}
        switch.turn_off
        {% endif %}
      entity_id:
        - switch.rfbridge2
        - switch.rfbridge7
        - switch.sonoff_t2

- alias: 'Guest Room Door Opened'
  trigger:
    - platform: state
      entity_id: sensor.rf_code
  action:
    - service_template: >
        {% if trigger.to_state.state[-6:] == "68C4A1" %}
        timer.start
        {% endif %}
      entity_id:
        - timer.door_guestroom_open


- alias: 'Viteks controller - random colors on all lights'
  trigger:
    - platform: state
      entity_id: sensor.rf_code
  action:
    - service_template: >
        {% if trigger.to_state.state[-6:-1] == "8E3FE" %}
        light.turn_on
        {% endif %}
      data_template:
        rgb_color: ['{{ "{0:d}".format(range(0,255)|random) }}',
                    '{{ "{0:d}".format(range(0,255)|random) }}',
                    '{{ "{0:d}".format(range(0,255)|random) }}']
        entity_id:
          - light.office_lamp
          - light.hall_upstairs
          - light.kitchen_counter
          - light.kitchen_moodlight
          - light.livingroom_moodlight
          - light.kidsroom_bedlight

- alias: 'Andrejka controller - random color on bed light'
  trigger:
    - platform: state
      entity_id: sensor.rf_code
  action:
    - service_template: >
        {% if trigger.to_state.state[-6:] == "2E54B3" %}
        light.turn_on
        {% endif %}
      data_template:
        rgb_color: ['{{ "{0:d}".format(range(0,128)|random) }}',
                    '{{ "{0:d}".format(range(0,128)|random) }}',
                    '{{ "{0:d}".format(range(0,128)|random) }}']
        entity_id:
          - light.kidsroom_bedlight


#
# Playlists
#
# kidsroom_1 - andrejciny/petovo pisnicky
# kidsroom_2 - pohadkove pisnicky
# kidsroom_3 - uhlir
# kidsroom_4 - Soundtracky
# kidsroom_5 - Elder scrolls
# kidsroom_6 - Country
# kidsroom_7 - Dance
# kidsroom_8 - Radio
# kidsroom_9 - Vanocni

- alias: 'Kidsroom player - play/next playlist/prev playlist'
  trigger:
    - platform: state
      entity_id: sensor.rf_code
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: media_player.mpd
        state: 'off'
      - condition: state
        entity_id: media_player.mpd
        state: 'paused'
  action:
    - service_template: >
        {% if trigger.to_state.state[-6:] == "374271" %}
        media_player.play_media
        {% elif trigger.to_state.state[-6:] == "374272" %}
        media_player.play_media
        {% elif trigger.to_state.state[-6:] == "374274" %}
        media_player.play_media
        {% endif %}
      data_template:
        media_content_id: '{{ "kidsroom_{0:d}".format(range(1,9)|random) }}'
        media_content_type: 'playlist'
        entity_id:
          - media_player.mpd


- alias: 'Kidsroom player - stop/next/prev'
  trigger:
    - platform: state
      entity_id: sensor.rf_code
  condition:
      - condition: state
        entity_id: media_player.mpd
        state: 'playing'
  action:
    - service_template: >
        {% if trigger.to_state.state[-6:] == "374271" %}
        media_player.media_stop
        {% elif trigger.to_state.state[-6:] == "374272" %}
        media_player.media_previous_track
        {% elif trigger.to_state.state[-6:] == "374274" %}
        media_player.media_next_track
        {% endif %}
      data:
        entity_id:
          - media_player.mpd


- alias: 'Kidsroom player - presets'
  trigger:
    - platform: state
      entity_id: sensor.rf_code
  action:
    - service: media_player.play_media
      data_template:
        media_content_id: >
          {% if trigger.to_state.state[-6:] == "0CD671" %}
          kidsroom_8
          {% elif trigger.to_state.state[-6:] == "0CD672" %}
          countryradio
          {% elif trigger.to_state.state[-6:] == "0CD674" %}
          pohadky
          {% elif trigger.to_state.state[-6:] == "0CD678" %}
          povesti
          {% endif %}
        media_content_type: 'playlist'
        entity_id:
          - media_player.mpd
      
